---
title: "Nachhaltige Orte Gießen"
format:
  html: 
    toc: false
    theme: 
      - cosmo
      - custom.scss
---

```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(crosstalk)
library(leaflet)
library(dplyr)

# define functions for Map-Markers ----
getColor <- function(locations) {
  sapply(locations$type, function(type) {
    case_when(
      type == "Garten" ~ "#5AE943",
      type == "Gastronomie" ~ "#FDCB4E",
      type == "Shop" ~ "#5EE2FF",
      type == "Teilen" ~ "#BF5EFF",
      TRUE ~ "#E94843"
    )
  })
}

Iconheight <- 38
Iconwidth <- 38

myIcons <- iconList(
  Garten = makeIcon(iconUrl = "media/1.svg", 
                    iconWidth = Iconwidth, 
                    iconHeight = Iconheight),
  Gastronomie = makeIcon(iconUrl = "media/2.svg", 
                         iconWidth = Iconwidth,
                         iconHeight = Iconheight),
  Shop = makeIcon(iconUrl = "media/3.svg", 
                  iconWidth = Iconwidth, 
                  iconHeight = Iconheight),
  Teilen = makeIcon(iconUrl = "media/4.svg",
                    iconWidth = Iconwidth, 
                    iconHeight = Iconheight),
  Info = makeIcon(iconUrl = "media/6.svg",
                    iconWidth = Iconwidth, 
                    iconHeight = Iconheight)
  )


# load data ----
locations <- read.csv("locations.csv") %>% 
  mutate(type = factor(type)) %>% 
  mutate(ID = row_number()) %>% 
  mutate(popup_content = paste(
    '<strong>', name, '</strong><br>',
    description, '<br>',
    ifelse(url != "", paste('<br><em>Website:</em> ', '<a href="', url, '" target="_blank">', substr(url, 9, nchar(url)), '</a>', '<br>'), ""),
    '<br><em>Type:</em> ', type
  ))



# create shared data for crosstalk
shared_locations <- SharedData$new(locations, key = ~ID) 


#paste('<strong>', name, '</strong><br>',
#                   description,'<br>',
#                   if(url != ""){
#                     paste('<em>Website:</em> ',
#                           '<a href="',url,'">',url,'</a>','<br>'),}
#                   '<br><em>Type:</em> ', type)
  
# implement filter ----
bscols(
  widths = c(1,5,5,1), 
  list(),
  filter_select(
    id = "location_filter",
    label = "Filter Ortstyp",
    sharedData = shared_locations,
    group = ~type,
    allLevels = TRUE,
    multiple = TRUE
  )
)


# create Map
leaflet(shared_locations) %>% 
  addTiles() %>%
  setView(lng = 8.6731, lat = 50.5867, zoom = 13) %>% 
  addMarkers(
    lng = ~longitude,
    lat = ~latitude,
    icon = ~myIcons[as.character(type)],
    popup = ~popup_content) %>%
  addEasyButton(easyButton(
    icon="fa-map", title="Standardansicht - Gießen",
    onClick=JS("function(btn, map){ map.setView([50.5867, 8.6731], 13);}"))) %>%
  addEasyButton(easyButton(
    icon="fa-crosshairs", title="Mein Standort",
    onClick=JS("function(btn, map){ map.locate({setView: true}); }")))



```